# Generated by Django 5.2.6 on 2025-09-15 21:55

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('billing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RouterConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('host', models.CharField(help_text='Router IP address', max_length=100)),
                ('api_port', models.IntegerField(default=8728)),
                ('username', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('hotspot_interface', models.CharField(default='wlan1', max_length=50)),
                ('address_pool', models.CharField(default='dhcp_pool1', max_length=50)),
                ('last_connected', models.DateTimeField(blank=True, null=True)),
                ('connection_status', models.CharField(default='unknown', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Router Configuration',
                'verbose_name_plural': 'Router Configurations',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('download_limit', models.CharField(help_text='e.g., 1M, 512k', max_length=20)),
                ('upload_limit', models.CharField(help_text='e.g., 256k, 128k', max_length=20)),
                ('session_timeout', models.CharField(blank=True, help_text='e.g., 1h, 30m', max_length=20)),
                ('idle_timeout', models.CharField(blank=True, help_text='e.g., 5m', max_length=20)),
                ('shared_users', models.IntegerField(default=1, help_text='Number of simultaneous sessions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='RouterCommand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('command_type', models.CharField(choices=[('create_user', 'Create User'), ('delete_user', 'Delete User'), ('enable_user', 'Enable User'), ('disable_user', 'Disable User'), ('get_active_users', 'Get Active Users'), ('disconnect_user', 'Disconnect User'), ('update_profile', 'Update Profile')], max_length=30)),
                ('command_data', models.JSONField()),
                ('executed_at', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField(default=False)),
                ('response_data', models.JSONField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('wifi_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.wifiuser')),
                ('router', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commands', to='mikrotik_integration.routerconfig')),
            ],
            options={
                'verbose_name': 'Router Command',
                'verbose_name_plural': 'Router Commands',
                'ordering': ['-executed_at'],
            },
        ),
        migrations.CreateModel(
            name='ActiveUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mikrotik_session_id', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50)),
                ('ip_address', models.GenericIPAddressField()),
                ('mac_address', models.CharField(max_length=17)),
                ('login_time', models.DateTimeField()),
                ('uptime', models.CharField(blank=True, max_length=20)),
                ('bytes_in', models.BigIntegerField(default=0)),
                ('bytes_out', models.BigIntegerField(default=0)),
                ('packets_in', models.BigIntegerField(default=0)),
                ('packets_out', models.BigIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('wifi_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='active_sessions', to='billing.wifiuser')),
                ('router', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mikrotik_integration.routerconfig')),
            ],
            options={
                'verbose_name': 'Active User',
                'verbose_name_plural': 'Active Users',
                'unique_together': {('wifi_user', 'router', 'mikrotik_session_id')},
            },
        ),
    ]
